name: Build

on: 
  push:
    tags:
    - '*'

jobs:
  build:
    runs-on: windows-latest
    env:
      SCCACHE_GHA_ENABLED: "true"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Prepare MSVC
        uses: TheMrMilchmann/setup-msvc-dev@v3
        with:
          arch: amd64_arm64
          spectre: true
      - name: Download ddnet
        run: |
            Invoke-WebRequest https://github.com/DDNet-WinArm64/ddnet/archive/266b3e78b2c6034099558959f177a7ef8c1eb56b/winarm64.zip -OutFile winarm64.zip
            unzip winarm64.zip
            Rename-Item ddnet-266b3e78b2c6034099558959f177a7ef8c1eb56b ddnet-winarm64
            Remove-Item -Recurse -Force ddnet-winarm64/ddnet-libs
      - name: Download ddnet-libs
        uses: actions/download-artifact@v4
        with:
            name: ddnet-libs-windows-arm64-llvm-ucrt
            path: ${{github.workspace}}/ddnet-winarm64/ddnet-libs
            github-token: ${{ secrets.GITHUB_TOKEN }}
            repository: DDNet-WinArm64/ddnet-libs
            run-id: 10107145927
      - name: Install stable Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
            targets: aarch64-pc-windows-msvc
      - name: Prepare Vulkan SDK
        uses: humbletim/setup-vulkan-sdk@v1.2.0
        with:
            vulkan-query-version: latest
            vulkan-components: SPIRV-Tools, Glslang
            vulkan-use-cache: true
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.5
      - name: Build
        run: |
            cd ddnet-winarm64
            cmake -S . -B build -A ARM64 -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER_LAUNCHER=sccache -DCMAKE_CXX_COMPILER_LAUNCHER=sccache -DCMAKE_SYSTEM_NAME=Windows -DCMAKE_SYSTEM_PROCESSOR=ARM64 -DCMAKE_RUST_COMPILER_TARGET=aarch64-pc-windows-msvc
            cmake --build build --config Release --target package_default --parallel
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: ddnet-windows-arm64-latest
          path: ddnet-winarm64/build/DDNet-18.4-win-arm64.zip
  publish:
    permissions: write-all
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
      - name: Publish
        uses: ncipollo/release-action@v1
        with:
          artifacts: ddnet-windows-arm64-latest/DDNet-18.4-win-arm64.zip
          body: "DDNet 18.4 Build"
      
